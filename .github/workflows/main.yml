name: Build, Test (Unit), and Deploy to ACI (Semi-Automated)

on:
  push:
    branches:
      - main # Este pipeline se ejecutará con cada push a la rama 'main'

env:
  AZURE_CONTAINER_REGISTRY: topicosregistry.azurecr.io # <--- REEMPLAZA CON LA URL COMPLETA DE TU ACR (ej. tuacr.azurecr.io)
  AZURE_RESOURCE_GROUP: topicos-rg # <--- REEMPLAZA CON EL NOMBRE DE TU GRUPO DE RECURSOS
  AZURE_ACI_NAME: api-topicos-container # <--- REEMPLAZA CON EL NOMBRE DESEADO PARA TU INSTANCIA ACI

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest # El sistema operativo donde se ejecutará el pipeline

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Paso para descargar tu código del repositorio

    # ----- PRUEBAS UNITARIAS (OPCIONAL) -----
    # Este bloque asume que tus pruebas son solo de Python y no necesitan la base de datos o Docker
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # Asegúrate de que esta versión de Python sea compatible con tu app y tests

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
        # Si usas pytest para tus pruebas unitarias, descomenta la siguiente línea:
        # pip install pytest

    - name: Run Unit Tests (Python Only)
      run: |
        echo "--- Ejecutando Pruebas Unitarias (Python) ---"
        # Si tienes archivos de pruebas (ej. tests/test_app.py), ejecuta aquí:
        # pytest
        echo "Pruebas unitarias finalizadas. (Si no tienes pruebas, esto siempre pasará)."
        # Si quieres que el pipeline falle si las pruebas no pasan, añade '|| exit 1' al comando de prueba.
    # ----------------------------------------

    # ----- CONSTRUCCIÓN Y SUBIDA DE IMAGEN A ACR -----
    - name: Log in to ACR
      run: |
        # Autenticación en ACR usando las credenciales de administrador (menos seguro, pero evita AAD Service Principal)
        echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ env.AZURE_CONTAINER_REGISTRY }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

    - name: Build and push Docker image to ACR
      run: |
        # Construye la imagen Docker desde tu Dockerfile en la raíz del repo
        docker build . -t ${{ env.AZURE_CONTAINER_REGISTRY }}/api-topicos:latest
        # Sube la imagen construida a tu ACR
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/api-topicos:latest

    # ----- PASO DE DESPLIEGUE (MANUAL ASISTIDO) -----
    - name: Provide Manual Deployment Commands for ACI
      run: |
        echo "--------------------------------------------------------"
        echo "¡El pipeline ha construido y subido la imagen a ACR!"
        echo "Para desplegar o actualizar tu aplicación en Azure Container Instances (ACI):"
        echo "1. Abre el Azure Cloud Shell en el portal de Azure."
        echo "2. Copia y pega los siguientes comandos UNO POR UNO en el Cloud Shell:"
        echo ""
        echo "   # --- Borrar la instancia ACI existente (si la hay) ---"
        echo "   az container delete \\"
        echo "     --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \\"
        echo "     --name ${{ env.AZURE_ACI_NAME }} \\"
        echo "     --yes || true"
        echo ""
        echo "   # --- Crear/Actualizar la instancia ACI con la nueva imagen ---"
        echo "   az container create \\"
        echo "     --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \\"
        echo "     --name ${{ env.AZURE_ACI_NAME }} \\"
        echo "     --image ${{ env.AZURE_CONTAINER_REGISTRY }}/api-topicos:latest \\"
        echo "     --dns-name-label api-topicos-alt-deploy \\ # <--- REEMPLAZA CON UN NOMBRE DNS ÚNICO y sencillo (ej. tuapprodmolinaaci)
        echo "     --ports 80 \\"
        echo "     --os-type Linux \\"
        echo "     --cpu 1 \\"
        echo "     --memory 1.5 \\"
        echo "     --environment-variables DB_CONNECTION_STRING=\"${{ secrets.AZURE_SQL_DB_CONNECTION_STRING }}\""
        echo "--------------------------------------------------------"
        echo "Una vez que el comando 'az container create' termine, tu aplicación estará disponible en la URL FQDN (Fully Qualified Domain Name) que aparecerá en la salida, generalmente algo como:"
        echo "http://api-topicos-alt-deploy.<tu_region_azure>.azurecontainer.io/"
        echo "(Asegúrate de reemplazar '<tu_region_azure>' con la región de Azure donde creaste el ACI, ej. eastus, westus, etc.)"
        echo "--------------------------------------------------------"
